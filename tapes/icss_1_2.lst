
      ironic computer space simulator  1.2  nl 2016-11-23                 Page 1


    1                   ironic computer space simulator  1.2  nl 2016-11-23
    2                   
    3       540000      	mul=mus			/instruction code for multiplication
    4       560000      	div=dis			/instruction code for division
    5       730000      	ioh=iot i		/wait for completion pulse (CRT display)
    6       640500      	szm=sza sma-szf		/skip on ac zero or minus
    7       650500      	spq=szm i		/skip on ac plus and not zero
    8                   
    9                   define initialize A,B
   10                   	law B
   11                   	dap A
   12                   	term
   13                   
   14                   define index A,B,C
   15                   	idx A
   16                   	sas B
   17                   	jmp C
   18                   	term
   19                   
   20                   define swap
   21                   	rcl 9s
   22                   	rcl 9s
   23                   	term
   24                   
   25                   define load A,B
   26                   	lio (B
   27                   	dio A
   28                   	term
   29                   
   30                   define setup A,B
   31                   	law i B
   32                   	dac A
   33                   	term
   34                   
   35                   define count A,B
   36                   	isp A
   37                   	jmp B
   38                   	term
   39                   
   40                   /macros specific to the program
   41                   
   42                   define scale A,B,C
   43                   	lac A
   44                   	sar B
   45                   	dac C
   46                   	term
   47                   
   48                   define random
   49                   	lac ran
   50                   	rar 1s
   51                   	xor (355671
   52                   	add (355671
   53                   	dac ran
   54                   	term
   55                   
   56                   
   57                   / Computer Space

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 2


   58                   / Original arcade game by Nolan Bushnell and Ted Dabney,
   59                   / Syzygy Engineering / Nutting Associates, 1971.
   60                   / 'A simulated space battle that pits
   61                   /  computer-guided saucers against
   62                   /  a rocket ship that you control.'
   63                   
   64                   / Ironic Computer Space Simulator for PDP-1, Norbert Landsteiner, 2016
   65                   
   66                   / sense switch options
   67                   / SSW 1 ...  parallax effect
   68                   /              off - stars roll continuously to the left.
   69                   /              on  - background stars move relatively to rocket ship.
   70                   / SSW 2 ...  parallax effect strength (together with SSW 1)
   71                   /              off - subtle effect.
   72                   /              on  - stronger effect.
   73                   / SSW 3 ...  torpedo agility (steering)
   74                   /              off - normal.
   75                   /              on  - agile.
   76                   / SSW 4 ...  saucer motion
   77                   /              off - diagonals are horizontally stretched.
   78                   /                    (conforms more to the overall impression of CS)
   79                   /              on  - geometrical diagonals.
   80                   / SSW 5 ...  saucer piloting, which saucer is shooting?
   81                   /              off - always the same one (as in original CS).
   82                   /              on  - random select.
   83                   / SSW 6 ...  scoring mode
   84                   /              off - original, truncated to single digit with wrap-around,
   85                   /                    player in hex (wraps at 16), saucer decimal (wraps at 10).
   86                   /              on  - no wrap-around, both scores display as a single hex digit,
   87                   /                    each extra play has to be won separately in order to continue.
   88                   
   89                   / input / control word in io as follows (like spacewar),
   90                   / 'high order 4 bits, rotate ccw, rotate cw, ire rocket, and fire torpedo.
   91                   /  Low order 4 bits, same for other ship.'
   92                   
   93                   
   94 00003             3/	jmp sbf			/ ignore seq. break
      00003 600126
   95 00004 600671      	jmp a0			/ start addr, use control boxes
   96 00005 600674      	jmp a1			/ alt. start addr, use testword controls
   97                   
   98                   
   99                   /game parameters
  100                   
  101 00006 001200      raa,  6,	1200		/ rocket angular acceleration
  102 00007 675377      rvl,  7,	sar 8s		/ scaling rocket velocity
  103 00010 710006      ras, 10,	law i 6		/ rocket acceleration sensitivity (skip)
  104 00011 710004      rad, 11,	law i 4		/ rocket acceleration damping (averaging)
  105 00012 675177      trv, 12,	sar 7s		/ scaling torpedo velocity
  106 00013 710250      tlf, 13,	law i 250	/ torpedo life
  107 00014 000060      rsd, 14,	60		/ rocket reset delay (frames)
  108 00015 710220      etl, 15,	law i 220	/ enemy torpedo life
  109 00016 710010      etd, 16,	law i 10	/ enemy torpedo cooling (frames)
  110 00017 710100      etf, 17,	law i 100	/ enemy first torpedo cooling (after score)
  111 00020 665077      ela, 20, 	sal 6s		/ scaling enemy torp look-ahead, far
  112 00021 665017      elb, 21, 	sal 4s		/ scaling enemy torp look-ahead, near
  113 00022 060000      eld, 22,	60000		/ min distance full look-ahead

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 3


  114 00023 014000      ete, 23,	14000		/ epsilon for enemy aiming
  115 00024 665007      etn, 24,	sal 3s		/ scaling noise for enemy torpedo aim
  116 00025 160000      efd, 25,	160000		/ min distance for loose aiming
  117 00026 000007      efp, 26,	7		/ probability of loose aiming
  118 00027 140000      efe, 27,	140000		/ epsilon for loose aiming
  119 00030 710450      rto, 30,	law i 450	/ game restart delay (frames blocking input)
  120 00031 000000      ran, 31,	0		/ random number
  121                   
  122                   
  123                   /adjust these three parameters for timing
  124                   
  125 00032 000060      ith, 32,	60		/ throttle (idle cycles / 3)
  126 00033 000074      ifs, 33, 	74		/ frames per second for time keeping
  127 00034 043120      isd, 34,	43120		/ onscreen score display timeout (5 x 60 x ifs = 5 min)
  128                   
  129                   /timing constants (avr. cycles / 3)
  130                   
  131 00035 000310      irk,	310		/ rocket routine
  132 00036 000360      isc,	360		/ saucer routine
  133 00037 000440      isx,	440		/ saucer explosion
  134 00040 000060      idp,	 60		/ score display
  135                   
  136                   
  137                   /saucer movement table (dy, dx), one screen loc = 0400
  138                   
  139                   / horizontally streched diagonals, default (dy, dx)
  140 00041 000600      ut0,	 600		   0
      00042 000000
  141 00043 777177      	-600		   0
      00044 000000
  142 00045 000000      	   0		 600
      00046 000600
  143 00047 000000      	   0		-600
      00050 777177
  144 00051 000400      	 400		 600
      00052 000600
  145 00053 777377      	-400		 600
      00054 000600
  146 00055 000400      	 400		-600
      00056 777177
  147 00057 777377      	-400		-600
      00060 777177
  148                   
  149                   / diagonals proper
  150 00061 000600      ut1,	 600		   0
      00062 000000
  151 00063 777177      	-600		   0
      00064 000000
  152 00065 000000      	   0		 600
      00066 000600
  153 00067 000000      	   0		-600
      00070 777177
  154 00071 000400      	 400		 400
      00072 000400
  155 00073 777377      	-400		 400
      00074 000400
  156 00075 000400      	 400		-400

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 4


      00076 777377
  157 00077 777377      	-400		-400
      00100 777377
  158                   
  159                   /saucer torpedo movement table (dy, dx)
  160 00101 002400      emt,	 2400		    0
      00102 000000
  161 00103 775377      	-2400		    0
      00104 000000
  162 00105 000000      	    0		 2400
      00106 002400
  163 00107 000000      	    0		-2400
      00110 775377
  164 00111 001600      	 1600		 1600
      00112 001600
  165 00113 776177      	-1600		 1600
      00114 001600
  166 00115 001600      	 1600		-1600
      00116 776177
  167 00117 776177      	-1600		-1600
      00120 776177
  168                   
  169                   
  170                   /character display grid units (for character outline compiler)
  171                   / (display positions are derived automatically at start up)
  172                   
  173 00121 007000      cgy,	 7000			/unit for character grid y
  174 00122 005000      cgx,	 5000			/unit for character grid x
  175 00126             	. 3/			/reserve space for x-unit offsets 2..4
  176                   
  177                   
  178                   /routine to flush sequence breaks, if they occur.
  179                   
  180 00126 720004      sbf,	tyi
  181 00127 220002      	lio 2
  182 00130 200000      	lac 0
  183 00131 720054      	lsm
  184 00132 610001      	jmp i 1
  185                   
  186                   
  187                   /sine-cosine subroutine - Adams associates 1961
  188                   /calling sequence= number in AC, jda sin or jda cos.
  189                   /argument is between +/- +2 pi, with binary point to right of bit 3.
  190                   /answer has binary point to right of bit 0.  Time = 2.35-? ms.
  191                   /changed for auto-multiply , ddp 1/19/63
  192                   
  193 00133 000000      cos,	0
  194 00134 260201      	dap csx
  195 00135 203673      	lac (62210
  196 00136 400133      	add cos
  197 00137 240141      	dac sin
  198 00140 600144      	jmp .+4
  199                   
  200 00141 000000      sin,	0
  201 00142 260201      	dap csx
  202 00143 200141      	lac sin
  203 00144 640200      	spa

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 5


  204 00145 403674      si1,	add (311040
  205 00146 423673      	sub (62210
  206 00147 640400      	sma
  207 00150 600202      	jmp si2
  208 00151 403673      	add (62210
  209                   
  210 00152 661003      si3,	ral 2s
  211 00153 543675      	mul (242763
  212 00154 240141      	dac sin
  213 00155 540141      	mul sin
  214 00156 240133      	dac cos
  215 00157 543676      	mul (756103
  216 00160 403677      	add (121312
  217 00161 540133      	mul cos
  218 00162 403700      	add (532511
  219 00163 540133      	mul cos
  220 00164 403701      	add (144417
  221 00165 540141      	mul sin
  222 00166 667007      	scl 3s
  223 00167 240133      	dac cos
  224 00170 060141      	xor sin
  225 00171 640400      	sma
  226 00172 600200      	jmp csx-1
  227 00173 203702      	lac (377777
  228 00174 220141      	lio sin
  229 00175 642000      	spi
  230 00176 761000      	cma
  231 00177 600201      	jmp csx
  232                   
  233 00200 200133      	lac cos
  234 00201 600201      csx,	jmp .
  235                   
  236 00202 761000      si2,	cma
  237 00203 403673      	add (62210
  238 00204 640400      	sma
  239 00205 600152      	jmp si3
  240 00206 403673      	add (62210
  241 00207 640200      	spa
  242 00210 600213      	jmp .+3
  243 00211 423673      	sub (62210
  244 00212 600152      	jmp si3
  245                   
  246 00213 423673      	sub (62210
  247 00214 600145      	jmp si1
  248                   
  249                   
  250                   /character outline compiler
  251                   
  252                   /character outlines
  253                   / 7 rows at 5 dots, left to right, top down,
  254                   / 2 words per character, aligned left.
  255                   cot,
  256 00215 350614      	350614	306134	/0
      00216 306134
  257 00217 106041      	106041	020410	/1
      00220 020410
  258 00221 350411      	350411	442076	/2

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 6


      00222 442076
  259 00223 350411      	350411	406134	/3
      00224 406134
  260 00225 451227      	451227	610204	/4
      00226 610204
  261 00227 770207      	770207	406134	/5
      00230 406134
  262 00231 350607      	350607	506134	/6
      00232 506134
  263 00233 760421      	760421	041020	/7
      00234 041020
  264 00235 350613      	350613	506134	/8
      00236 506134
  265 00237 350613      	350613	604230	/9
      00240 604230
  266 00241 105214      	105214	376142	/A
      00242 376142
  267 00243 750617      	750617	506174	/B
      00244 506174
  268 00245 350604      	350604	102134	/C
      00246 102134
  269 00247 750614      	750614	306174	/D
      00250 306174
  270 00251 770207      	770207	502076	/E
      00252 502076
  271 00253 770207      	770207	502040	/F
      00254 502040
  272                   
  273 00276             coa,	. 21/			/space for addresses of character object code
  274                   
  275                   /setup and compile digits 0-9, chars A-F
  276 00276 260326      ci,	dap cix
  277 00277 200122      	lac cgx			/set up grid units (1..4)
  278 00300 400122      	add cgx
  279 00301 240123      	dac cgx 1
  280 00302 400122      	add cgx
  281 00303 240124      	dac cgx 2
  282 00304 400122      	add cgx
  283 00305 240125      	dac cgx 3
  284 00306 344101      ci2,	dzm \t1			/compile outlines
  285 00307 704246      	law ctb
  286 00310 260315      	dap ci4
  287 00311 700255      	law coa
  288 00312 260316      	dap ci5
  289 00313 760200      	cla
  290 00314 240320      ci3,	dac . 4			/fix up character index
  291 00315 700315      ci4,	law .			/start address of compiled code (fixed up)
  292 00316 240316      ci5,	dac .			/store start address (fixed up)
  293 00317 170327      	jda cc
  294 00320 000000      	0			/character index (fixed up)
  295 00321 260315      	dap ci4
  296 00322 440316      	idx ci5
  297 00323 444101      	idx \t1
  298 00324 523703      	sas (21
  299 00325 600314      	jmp ci3
  300 00326 600326      cix,	jmp .
  301                   

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 7


  302                   /character outline compiler
  303                   / call  law addr, jda cc, char-index (see cot)
  304                   / returns next address in ac, compiled code will exit at cdx
  305                   
  306                   define comp A			/push instr. A to object code
  307                   	lac A
  308                   	dac i cc
  309                   	idx cc
  310                   	term
  311                   
  312                   define cadd A			/add instr. A to ac and push to object code
  313                   	add A
  314                   	dac i cc
  315                   	idx cc
  316                   	term
  317                   
  318 00327 000000      cc,	0
  319 00330 260453      	dap ccx
  320 00331 210453      	lac i ccx		/get char-index
  321 00332 665001      	sal 1s
  322 00333 403704      	add (cot
  323 00334 244102      	dac \cwd		/addr. of first code word
  324 00335 440453      	idx ccx			/fix up return address
  325 00336 760016      	stf 6			/flag 6 for first dot
  326 00337 710022      	law i 22
  327 00340 244103      	dac \cbi		/bit counter
  328 00341 234102      	lio i \cwd		/get first code word to parse
  329                   	comp (lio cy		/- reset y
      00342 203705
      00343 250327
      00344 440327
  330 00345 344104      	dzm \cyi
  331                   	comp (lac cx		/- reset x
      00346 203706
      00347 250327
      00350 440327
  332 00351 344105      	dzm \cxp		/current x
  333 00352 344106      ccr,	dzm \cxi		/new row
  334 00353 652000      	spi i			/is there a dot?
  335 00354 600406      	jmp ccs			/no
  336 00355 204106      	lac \cxi		/get offset to last x
  337 00356 424105      	sub \cxp
  338 00357 650100      	sza i
  339 00360 600375      	jmp ccd
  340 00361 640200      	spa
  341 00362 600367      	jmp ccm
  342                   	cadd (add cgx-1
      00363 403707
      00364 250327
      00365 440327
  343 00366 600373      	jmp cca
  344 00367 761000      ccm,	cma
  345                   	cadd (sub cgx-1
      00370 403710
      00371 250327
      00372 440327
  346 00373 204106      cca,	lac \cxi

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 8


  347 00374 244105      	dac \cxp
  348 00375 640006      ccd,	szf 6
  349 00376 600402      	jmp cd1
  350                   	comp (ioh		/- wait for display
      00377 203711
      00400 250327
      00401 440327
  351                   cd1,	comp (dpy -4000 100	/- display a dot
      00402 203712
      00403 250327
      00404 440327
  352 00405 760006      	clf 6
  353 00406 662001      ccs,	ril 1s			/advance to next bit
  354 00407 464103      	isp \cbi
  355 00410 600415      	jmp cci
  356 00411 710022      	law i 22		/fetch next code word
  357 00412 244103      	dac \cbi
  358 00413 444102      	idx \cwd
  359 00414 234102      	lio i \cwd
  360 00415 444106      cci,	idx \cxi
  361 00416 523713      	sas (5			/end of a row?
  362 00417 600353      	jmp ccr 1		/no
  363 00420 444104      	idx \cyi		/next row
  364 00421 503714      	sad (7			/was it the last one?
  365 00422 600443      	jmp ccz			/trail and exit
  366                   	comp (rcr 9s		/- swap
      00423 203715
      00424 250327
      00425 440327
  367                   	comp (rcr 9s
      00426 203715
      00427 250327
      00430 440327
  368                   	comp (sub cgy		/- increment pos y
      00431 203710
      00432 250327
      00433 440327
  369                   	comp (rcr 9s		/- swap
      00434 203715
      00435 250327
      00436 440327
  370                   	comp (rcr 9s
      00437 203715
      00440 250327
      00441 440327
  371 00442 600352      	jmp ccr
  372 00443 640006      ccz,	szf 6
  373 00444 600450      	jmp cz1
  374                   	comp (ioh
      00445 203711
      00446 250327
      00447 440327
  375                   cz1,	comp (jmp cdx
      00450 203716
      00451 250327
      00452 440327
  376 00453 600453      ccx,	jmp .			/return

      ironic computer space simulator  1.2  nl 2016-11-23                 Page 9


  377                   
  378 00454 000000      cx,	0
  379 00455 000000      cy,	0
  380                   
  381                   /display a character
  382                   / call  law char-index, jda cd (coors in cx, cy)
  383 00456 000000      cdp,	0
  384 00457 260464      	dap cdx
  385 00460 700255      	law coa
  386 00461 400456      	add cdp
  387 00462 260463      	dap . 1
  388 00463 610463      	jmp i .
  389 00464 600464      cdx,	jmp .
  390                   
  391                   
  392                   /subroutines for background display
  393                   
  394       000077      nos=77 	/number of stars
  395                   
  396                   /table of stars coors (nos words, 9 bits x and 9 bits y)
  397 00564             bst,	. nos/
  398                   
  399                   /setup (nos random coors starting at bst)
  400                   
  401 00564 260602      bsi,	dap bsx
  402                   	init bsc, bst			/ deposit first addr of bst in bsc
      00565 700465
      00566 260574
  403                   bsl,	random				/ new random number to repersent both coors
      00567 200031
      00570 671001
      00571 063717
      00572 403717
      00573 240031
  404 00574 240574      bsc,	dac .				/ store it in current loc of bst
  405                   	index bsc, (dac bst+nos, bsl	/ increment bsl, repeat at bgl for nos times
      00575 440574
      00576 523720
      00577 600567
  406 00600 340667      	dzm bgh				/ reset bg offsets
  407 00601 340670      	dzm bgv
  408 00602 600602      bsx,	jmp .				/ return
  409                   
  410                   
  411                   /display background stars (displays every 2nd frame only)
  412                   
  413 00603 260666      bg,	dap bgx
  414 00604 204107      	lac \frc			/ check frame conter
  415 00605 023721      	and (1
  416 00606 640100      	sza				/ skip every second frame
  417 00607 600650      	jmp bgi				/ jump to star display
  418 00610 204110      	lac \gms			/ force slow movement in attract mode
  419 00611 650500      	spq
  420 00612 600640      	jmp bgd
  421 00613 650010      	szs i 10			/ sense switch 1 for parallax effect
  422 00614 600640      	jmp bgd
  423 00615 204111      	lac \rdx

      ironic computer space simulator  1.2  nl 2016-11-23                Page 10


  424 00616 650020      	szs i 20			/ sense switch 2 for stronger effect
  425 00617 600622      	jmp . 3
  426 00620 675001      	sar 1s
  427 00621 404111      	add \rdx
  428 00622 675007      	sar 3s
  429 00623 761000      	cma
  430 00624 400667      	add bgh
  431 00625 240667      	dac bgh
  432 00626 204112      	lac \rdy
  433 00627 650020      	szs i 20
  434 00630 600633      	jmp . 3
  435 00631 675001      	sar 1s
  436 00632 404112      	add \rdy
  437 00633 675007      	sar 3s
  438 00634 761000      	cma
  439 00635 400670      	add bgv
  440 00636 240670      	dac bgv
  441 00637 600666      	jmp bgx				/ return
  442 00640 204107      bgd,	lac \frc			/ advance x offset slowly
  443 00641 023722      	and (177
  444 00642 640100      	sza
  445 00643 600666      	jmp bgx
  446 00644 710400      	law i 400
  447 00645 400667      	add bgh
  448 00646 240667      	dac bgh
  449 00647 600666      	jmp bgx				/ return
  450                   bgi,	init bgl, bst			/ init bgl to first addr of stars table
      00650 700465
      00651 260652
  451 00652 200652      bgl,	lac .				/ get coors of next star (x/y)
  452 00653 764000      	cli				/ clear io
  453 00654 677777      	scr 9s				/ shift low 9 bits in high 9 bits of io (x)
  454 00655 665777      	sal 9s				/ move remaining 9 bits in ac in high part (y)
  455 00656 400670      	add bgv				/ add vertical offset
  456                   	swap				/ swap contents of ac and io
      00657 663777
      00660 663777
  457 00661 400667      	add bgh				/ add horizontal offset
  458 00662 720007      	dpy-i				/ display a dot at coors in ac (x) and io (y)
  459                   	index bgl, (lac bst+nos, bgl	/ repeat the loop at bgl nos times
      00663 440652
      00664 523723
      00665 600652
  460 00666 600666      bgx,	jmp .				/ return
  461                   
  462 00667 000000      bgh,	0
  463 00670 000000      bgv,	0
  464                   
  465                   /	start				/ cut here for two source tapes
  466                   
  467                   
  468                   /ironic computer space simulator  1.2   pt. 2   nl 2016-11-23
  469                   
  470                   /here from start
  471                   
  472 00671 703243      a0,	law rcb			/configure to read control boxes (sa 4)
  473 00672 262712      	dap rcw

      ironic computer space simulator  1.2  nl 2016-11-23                Page 11


  474 00673 600676      	jmp a2
  475                   
  476 00674 703247      a1,	law rtw			/configure to read testword (sa 5)
  477 00675 262712      	dap rcw
  478                   
  479                   /initial setup
  480                   
  481 00676 620276      a2,	jsp ci			/ run character outline compiler
  482                   
  483 00677 200122      	lac cgx			/ configure positions for score display
  484 00700 665007      	sal 3s
  485 00701 420122      	sub cgx
  486 00702 761000      	cma
  487 00703 244101      	dac \t1			/ -7 x
  488 00704 403702      	add (377777		/ right margin
  489 00705 244113      	dac \d0x		/ right pos = margin - 7 x (2 x offset)
  490 00706 404101      	add \t1
  491 00707 244114      	dac \d1x		/ left pos = margin - 14 x (2 x spacing)
  492 00710 200121      	lac cgy
  493 00711 665007      	sal 3s
  494 00712 420121      	sub cgy
  495 00713 675001      	sar 1s
  496 00714 244115      	dac \d1y		/ vertical middle pos = 7/2 y (centered)
  497 00715 665003      	sal 2s
  498 00716 420121      	sub cgy
  499 00717 244116      	dac \d0y		/ top pos = 13 y (3 y spacing)
  500 00720 761000      	cma
  501 00721 404115      	add \d1y
  502 00722 404115      	add \d1y
  503 00723 244117      	dac \d2y		/ bottom pos = 6 (3 y spacing)
  504                   
  505 00724 200035      	lac irk			/ configure cycle count budget
  506 00725 400036      	add isc
  507 00726 400040      	add idp
  508 00727 400032      	add ith
  509 00730 761000      	cma
  510 00731 244120      	dac \ifr
  511 00732 200034      	lac isd			/ get timeout for onscreen display in attract mode
  512 00733 761000      	cma
  513 00734 244121      	dac \scc		/ counter for onscreen scores timeout
  514 00735 621156      	jsp a3			/ setup rest of the game
  515 00736 344110      	dzm \gms		/ game status to attract mode
  516                   
  517                   
  518                   /main loop
  519                   
  520 00737 204120      fr0,	lac \ifr 		/ initial instruction budget (delay)
  521 00740 244122      	dac \ict
  522 00741 444107      	idx \frc		/ increment frame counter (only least significant bits used)
  523 00742 760001      	clf 1			/ flag 1 indicates active player's ship
  524 00743 760002      	clf 2
  525 00744 760003      	clf 3
  526                   
  527 00745 620603      	jsp bg			/ display background
  528                   
  529 00746 204110      	lac \gms		/ in attract mode?
  530 00747 650500      	spq

      ironic computer space simulator  1.2  nl 2016-11-23                Page 12


  531 00750 601056      	jmp at0			/ yes
  532                   
  533 00751 204123      	lac \hpm		/ check hyperspace mode (extended play)
  534 00752 640400      	sma			/ activated?
  535 00753 600764      	jmp ffg			/ no
  536 00754 702000      	law 2000		/ display moving dots at the bottom
  537 00755 404124      	add \hpc		/  as an indicator (in stead of reverse video)
  538 00756 244124      	dac \hpc
  539 00757 223724      	lio (-377000
  540 00760 724007      	dpy -4000		/ display a dot
  541 00761 761000      	cma			/ mirror x
  542 00762 730000      	ioh			/ wait for the crt
  543 00763 720007      	dpy -i			/ and display another one
  544                   
  545 00764 622650      ffg,	jsp rkt			/ rocket routine
  546 00765 621460      	jsp ufo
  547 00766 204125      	lac \trs
  548 00767 640100      	sza
  549 00770 623164      	jsp trp			/ torpedo routine
  550 00771 204126      	lac \ets
  551 00772 640100      	sza
  552 00773 622625      	jsp etm			/ enemy torpedo routine
  553 00774 621246      	jsp df			/ check collisions
  554                   
  555 00775 444127      	idx \fdc		/ manage time
  556 00776 520033      	sas ifs
  557 00777 601117      	jmp fr2
  558 01000 344127      	dzm \fdc
  559 01001 444130      	idx \fd0
  560 01002 523725      	sas (12
  561 01003 601117      	jmp fr2
  562 01004 344130      	dzm \fd0
  563 01005 444131      	idx \fd1
  564 01006 523725      	sas (12			/ overflow of second timer digit?
  565 01007 601117      	jmp fr2			/ no
  566                   
  567 01010 344131      ff0,	dzm \fd1		/ game over, check scores
  568 01011 204132      	lac \sc1
  569 01012 424133      	sub \sc2
  570 01013 424134      	sub \sco		/ subtract score offset
  571 01014 244101      	dac \t1			/ and store new offset
  572 01015 650006      	szs i 6			/ sense switch 6 set for alternate scoring method?
  573 01016 400000      	add	\sco		/ no, add \sco again
      01017 004134
  574 01020 640500      	szm			/ winner?
  575 01021 601047      	jmp fng			/ yes, continue
  576 01022 100030      	xct rto			/ change to attract mode (get restart delay)
  577 01023 244110      	dac \gms
  578 01024 200034      	lac isd			/ reset timeout for onscreen display
  579 01025 761000      	cma
  580 01026 244121      	dac \scc
  581 01027 204135      	lac \rks		/ get rocket state
  582 01030 640100      	sza			/ active?
  583 01031 601036      	jmp ff1			/ yes, start a final spinning animation
  584 01032 400014      	add rsd			/ check, if spinning
  585 01033 640400      	sma			/ animation done?
  586 01034 344135      	dzm \rks		/ yes, disable rocket

      ironic computer space simulator  1.2  nl 2016-11-23                Page 13


  587 01035 601113      	jmp fr1
  588                   
  589 01036 701044      ff1,	law ff2			/ fix up return address for df-routine
  590 01037 261427      	dap dfx			/  to setup a final spin of the rocket
  591 01040 760015      	stf 5			/ set flag 5, do not respawn saucers
  592 01041 204133      	lac \sc2		/ backup saucers' score
  593 01042 244101      	dac \t1
  594 01043 601372      	jmp dxr			/ reset rocket to spin
  595 01044 204101      ff2,	lac \t1			/ undo score increment done in dxr
  596 01045 244133      	dac \sc2
  597 01046 601113      	jmp fr1
  598                   
  599 01047 204123      fng,	lac \hpm		/ continue for a new game (extra play)
  600 01050 761000      	cma			/ flip 'hyperspace mode'
  601 01051 244123      	dac \hpm
  602 01052 344124      	dzm \hpc		/ reset counter for 'hyperspace' animation
  603 01053 204101      	lac \t1			/ store current score offset
  604 01054 244134      	dac \sco
  605 01055 601117      	jmp fr2
  606                   
  607                   at0,				/ attract mode
  608 01056 204135      	lac \rks		/ check rocket state
  609 01057 640400      	sma			/ spinning?
  610 01060 601065      	jmp . 5			/ no
  611 01061 622650      	jsp rkt
  612 01062 204135      	lac \rks		/ check again for setup delay
  613 01063 400014      	add rsd
  614 01064 640400      	sma			/ spinning done?
  615 01065 344135      	dzm \rks		/ yes, disable rocket
  616 01066 632712      	jsp i rcw		/ new game on any input
  617 01067 324136      	dio \cw
  618                   	random
      01070 200031
      01071 671001
      01072 063717
      01073 403717
      01074 240031
  619 01075 464110      	isp \gms		/ countup to prevent accidental restart
  620 01076 601112      	jmp at1
  621 01077 344110      	dzm \gms
  622 01100 204136      	lac \cw
  623 01101 064137      	xor \cwo
  624 01102 650100      	sza i
  625 01103 601112      	jmp at1
  626 01104 621156      	jsp a3			/ restart
  627 01105 710020      	law i 20
  628 01106 244135      	dac \rks
  629 01107 700001      	law 1
  630 01110 244110      	dac \gms
  631 01111 601117      	jmp fr2
  632 01112 621460      at1,	jsp ufo
  633                   
  634 01113 464121      fr1,	isp \scc		/ increment score display counter
  635 01114 601117      	jmp fr2
  636 01115 344121      	dzm \scc		/ prevent run around
  637 01116 640200      	spa
  638 01117 621125      fr2,	jsp scd			/ display scores

      ironic computer space simulator  1.2  nl 2016-11-23                Page 14


  639 01120 204136      	lac \cw			/ backup control input for comparison
  640 01121 244137      	dac \cwo
  641                   
  642                   fr3,	count \ict, .		/ use up rest of time of main loop
      01122 464122
      01123 601122
  643 01124 600737      	jmp fr0			/ next frame
  644                   
  645                   
  646                   /score display
  647                   
  648 01125 261155      scd,	dap scx
  649 01126 204113      	lac \d0x
  650 01127 240454      	dac cx
  651 01130 204116      	lac \d0y
  652 01131 240455      	dac cy
  653 01132 204132      	lac \sc1
  654 01133 023726      	and (17
  655 01134 170456      	jda cdp
  656 01135 204115      	lac \d1y
  657 01136 240455      	dac cy
  658 01137 204133      	lac \sc2
  659 01140 023726      	and (17
  660 01141 170456      	jda cdp
  661 01142 204117      	lac \d2y
  662 01143 240455      	dac cy
  663 01144 204130      	lac \fd0
  664 01145 170456      	jda cdp
  665 01146 204114      	lac \d1x
  666 01147 240454      	dac cx
  667 01150 204131      	lac \fd1
  668 01151 170456      	jda cdp
  669 01152 204122      	lac \ict
  670 01153 400040      	add idp
  671 01154 244122      	dac \ict
  672 01155 601155      scx,	jmp .
  673                   
  674                   
  675                   /start a new game
  676 01156 261245      a3,	dap ax
  677 01157 620564      	jsp bsi			/ setup bg-stars
  678 01160 344130      	dzm \fd0		/ reset counters for time display
  679 01161 344131      	dzm \fd1
  680 01162 344127      	dzm \fdc
  681 01163 344135      	dzm \rks		/ rocket status to inactive
  682 01164 344123      	dzm \hpm		/ reset 'hyperspace mode'
  683 01165 344134      	dzm \sco		/ reset score offset (for alternate scoring)
  684                   
  685                   /rocket setup
  686 01166 203727      ar,	lac (670000
  687 01167 244140      	dac \rth		/ rotational angle
  688 01170 244141      	dac \th0
  689 01171 203730      	lac (-200000
  690 01172 244142      	dac \rpx		/ pos x
  691 01173 761000      	cma
  692 01174 244143      	dac \rpy		/ pos y
  693 01175 700140      	law 140

      ironic computer space simulator  1.2  nl 2016-11-23                Page 15


  694 01176 244111      	dac \rdx
  695 01177 710440      	law i 440
  696 01200 244112      	dac \rdy
  697 01201 344144      	dzm \rac		/ acceleration skip counter
  698 01202 344145      	dzm \rxc		/ reset center offset
  699 01203 344146      	dzm \ryc
  700 01204 344132      	dzm \sc1		/score
  701 01205 344125      	dzm \trs		/torpedo status counter
  702 01206 344137      	dzm \cwo		/old control word
  703                   
  704                   /saucer setup
  705                   au,	random
      01207 200031
      01210 671001
      01211 063717
      01212 403717
      01213 240031
  706 01214 244147      	dac \upy		/ pos y
  707                   	random
      01215 200031
      01216 671001
      01217 063717
      01220 403717
      01221 240031
  708 01222 675017      	sar 4s
  709 01223 403731      	add (140000
  710 01224 244150      	dac \upx		/ pos x
  711 01225 344151      	dzm \udc		/ animation skip counter
  712 01226 700001      	law 1
  713 01227 244152      	dac \udd		/ animation direction
  714 01230 344153      	dzm \umo		/ direction code
  715 01231 344154      	dzm \udy		/ delta y
  716 01232 344155      	dzm \udx		/ delta x
  717 01233 710010      	law i 10
  718 01234 244156      	dac \ufc		/ duration of movement
  719 01235 700001      	law 1
  720 01236 244157      	dac \uft		/ speed of center animation (1,3)
  721 01237 244160      	dac \ufs		/ state counter
  722 01240 710001      	law i 1
  723 01241 244153      	dac \umo
  724 01242 344133      	dzm \sc2
  725 01243 344126      	dzm \ets		/ torpedo state
  726 01244 622643      	jsp etr			/ get torpedo cooling (\etc)
  727                   
  728 01245 601245      ax,	jmp .
  729                   
  730                   
  731                   /collision / hit detection
  732                   
  733 01246 261427      df,	dap dfx
  734 01247 204160      	lac \ufs		/check saucer state
  735 01250 650500      	spq			/skip on positive
  736 01251 601427      	jmp dfx
  737 01252 204135      	lac \rks		/check rocket state
  738 01253 650500      	spq
  739 01254 601427      	jmp dfx
  740 01255 760005      	clf 5

      ironic computer space simulator  1.2  nl 2016-11-23                Page 16


  741                   
  742 01256 204142      	lac \rpx		/get rotational center of rocket
  743 01257 424145      	sub \rxc
  744 01260 244161      	dac \px
  745 01261 204143      	lac \rpy
  746 01262 404146      	add \ryc
  747 01263 244162      	dac \py
  748                   
  749 01264 704161      	law \px			/set up rocket for comparison
  750 01265 261431      	dap mx1
  751 01266 704162      	law \py
  752 01267 261441      	dap my1
  753                   
  754 01270 203732      	lac (21000		/set up collision radii (x 34, y 24) in screen locs
  755 01271 244163      	dac \dxe
  756 01272 675001      	sar 1s
  757 01273 244164      	dac \de2
  758 01274 203733      	lac (14000
  759 01275 244165      	dac \dye
  760                   
  761 01276 704150      	law \upx		/first saucer
  762 01277 261432      	dap mx2
  763 01300 704147      	law \upy
  764 01301 261442      	dap my2
  765 01302 621430      	jsp dmf			/compare them
  766 01303 640100      	sza			/hit?
  767 01304 601372      	jmp dxr			/yes
  768                   
  769 01305 204147      	lac \upy		/second saucer
  770 01306 423734      	sub (400000		/vertical offset
  771 01307 244166      	dac \vpy
  772 01310 704166      	law \vpy
  773 01311 261442      	dap my2
  774 01312 621430      	jsp dmf			/compare them
  775 01313 640100      	sza			/hit?
  776 01314 601372      	jmp dxr			/yes
  777                   
  778 01315 204125      dft,	lac \trs		/torpedo active?
  779 01316 640400      	sma
  780 01317 601342      	jmp dfe
  781 01320 203735      	lac (12200		/setup hit box (x 21, y 10)
  782 01321 244163      	dac \dxe
  783 01322 675001      	sar 1s
  784 01323 244164      	dac \de2
  785 01324 203736      	lac (5000
  786 01325 244167      	dac \dfy
  787 01326 704170      	law \tpx		/set up torp as first object
  788 01327 261431      	dap mx1
  789 01330 704171      	law \tpy
  790 01331 261441      	dap my1
  791 01332 621430      	jsp dmf			/compare first saucer
  792 01333 640100      	sza
  793 01334 601415      	jmp dxu			/hit, respawn
  794                   
  795 01335 704147      	law \upy		/second saucer
  796 01336 261442      	dap my2
  797 01337 621430      	jsp dmf			/compare them

      ironic computer space simulator  1.2  nl 2016-11-23                Page 17


  798 01340 640100      	sza			/hit?
  799 01341 601415      	jmp dxu
  800                   
  801 01342 204126      dfe,	lac \ets		/enemy torpedo active?
  802 01343 650100      	sza i
  803 01344 601427      	jmp dfx
  804 01345 203737      	lac (11000
  805 01346 244163      	dac \dxe
  806 01347 244165      	dac \dye
  807 01350 706400      	law 6400
  808 01351 244164      	dac \de2
  809 01352 704161      	law \px
  810 01353 261431      	dap mx1
  811 01354 704162      	law \py
  812 01355 261441      	dap my1
  813 01356 704172      	law \epx
  814 01357 261432      	dap mx2
  815 01360 704173      	law \epy
  816 01361 261442      	dap my2
  817 01362 621430      	jsp dmf
  818 01363 650100      	sza i
  819 01364 601427      	jmp dfx
  820 01365 344126      	dzm \ets		/reset enemy torpedo
  821 01366 100017      	xct etf			/get initial topredo cooling
  822 01367 244174      	dac \etc		/and store it
  823 01370 200000      	lac
  824 01371 760015      	stf 5
  825                   
  826 01372 710100      dxr,	law i 100		/set rocket state to collision
  827 01373 420014      	sub rsd			/additional delay before reset
  828 01374 244135      	dac \rks
  829 01375 344111      	dzm \rdx
  830 01376 344112      	dzm \rdy
  831 01377 344125      	dzm \trs
  832 01400 204140      	lac \rth
  833 01401 244141      	dac \th0
  834 01402 344175      	dzm \thc
  835 01403 710010      	law i 10
  836 01404 244176      	dac \thd
  837 01405 444133      	idx \sc2
  838 01406 640060      	szs 60			/sense switch 6 for straight hex scores, no wrap-around
  839 01407 601413      	jmp . 4
  840 01410 423725      	sub (12			/wrap score around at decimal 10
  841 01411 640400      	sma
  842 01412 344133      	dzm \sc2
  843 01413 640005      	szf 5			/was it a saucer-rocket collision?
  844 01414 601427      	jmp dfx			/no
  845                   
  846 01415 344125      dxu,	dzm \trs		/set up saucer explosion, reset torpedoes
  847 01416 344126      	dzm \ets
  848 01417 211442      	lac i my2		/set up pos y
  849 01420 244147      	dac \upy
  850 01421 444132      	idx \sc1
  851 01422 640060      	szs 60			/sense switch 6 for straight hex scores, no wrap-around
  852 01423 601426      	jmp . 3
  853 01424 023726      	and (17			/wrap score around at decimal 16 (hex)
  854 01425 244132      	dac \sc1

      ironic computer space simulator  1.2  nl 2016-11-23                Page 18


  855 01426 622163      	jsp uxs
  856                   
  857 01427 601427      dfx,	jmp .			/return
  858                   
  859                   
  860                   /subroutine to compare object positions (from spacewar, mod n.l.)
  861 01430 261457      dmf,	dap dmx
  862 01431 201431      mx1,	lac .			/calc if collision
  863 01432 421432      mx2,	sub .			/delta x
  864 01433 640200      	spa			/take abs val
  865 01434 761000      	cma
  866 01435 244101      	dac \t1
  867 01436 424163      	sub \dxe		/ < epsilon x ?
  868 01437 640400      	sma
  869 01440 601456      	jmp dm0			/no
  870 01441 201441      my1,	lac .
  871 01442 421442      my2,	sub .
  872 01443 640200      	spa
  873 01444 761000      	cma
  874 01445 424165      	sub \dye		/ < epsilon y ?
  875 01446 640400      	sma
  876 01447 601456      	jmp dm0			/no
  877 01450 404101      	add \t1
  878 01451 424164      	sub \de2		/ < epsilon 2 ?
  879 01452 640400      	sma
  880 01453 601456      	jmp dm0
  881 01454 700001      	law 1			/return 1 (in ac) for hit
  882 01455 601457      	jmp dmx
  883 01456 760200      dm0,	cla			/return 0 for miss
  884 01457 601457      dmx,	jmp .
  885                   
  886                   
  887                   /saucers
  888                   
  889 01460 261642      ufo,	dap ufx
  890 01461 204160      	lac \ufs
  891 01462 650500      	spq
  892 01463 602330      	jmp uxe
  893 01464 760006      	clf 6
  894                   
  895 01465 204150      	lac \upx		/update position
  896 01466 404155      	add \udx
  897 01467 244150      	dac \upx
  898 01470 244161      	dac \px
  899 01471 204147      	lac \upy
  900 01472 404154      	add \udy
  901 01473 244147      	dac \upy
  902 01474 244162      	dac \py
  903 01475 623460      	jsp sd			/display first saucer
  904 01476 204162      	lac \py
  905 01477 423734      	sub (400000		/half-screen vertical offset
  906 01500 244162      	dac \py
  907 01501 623460      	jsp sd			/display second saucer
  908                   
  909 01502 464156      	isp \ufc		/increment leg counter
  910 01503 601620      	jmp uf1			/continue
  911 01504 204153      	lac \umo		/new direction

      ironic computer space simulator  1.2  nl 2016-11-23                Page 19


  912 01505 640200      	spa
  913 01506 601542      	jmp uza			/we're in a 3-steps stop (\umo: -3..-1)
  914 01507 675007      	sar 3s			/ 010 set for single step stop
  915 01510 640100      	sza
  916 01511 601560      	jmp uz1
  917                   	random
      01512 200031
      01513 671001
      01514 063717
      01515 403717
      01516 240031
  918 01517 640400      	sma
  919 01520 601567      	jmp uf2			/set up new leg
  920                   
  921 01521 344155      	dzm \udx		/stop
  922 01522 344154      	dzm \udy
  923 01523 200031      	lac ran			/what kind of stop will it be?
  924 01524 661007      	ral 3s
  925 01525 640200      	spa
  926 01526 601532      	jmp uz0			/three-steps stop
  927 01527 700010      	law 10			/single-step stop, keep center animation
  928 01530 244153      	dac \umo
  929 01531 601536      	jmp uzb			/get delay and continue
  930 01532 710003      uz0,	law i 3			/first period of three-steps stop
  931 01533 244153      	dac \umo		/reuse \umo as step counter (negative)
  932 01534 700003      	law 3
  933 01535 244157      	dac \uft		/set animation to slow (3)
  934 01536 621664      uzb,	jsp utd			/get duration
  935 01537 675001      	sar 1s
  936 01540 244156      	dac \ufc
  937 01541 602403      	jmp eta			/continue for torpedo setup
  938                   
  939 01542 761000      uza,	cma			/3-steps stop, dispatch on -\umo (-3..-1)
  940 01543 403740      	add (. 3
  941 01544 261546      	dap . 2
  942 01545 444153      	idx \umo
  943 01546 601546      	jmp .
  944 01547 601560      	jmp uz1
  945 01550 601553      	jmp uz2
  946 01551 344152      uz3,	dzm \udd		/3 - stop animation
  947 01552 601554      	jmp . 2
  948 01553 621643      uz2,	jsp ucd			/2 - still stopped, new animation direction
  949 01554 621664      	jsp utd
  950 01555 675001      	sar 1s
  951 01556 244156      	dac \ufc
  952 01557 602403      	jmp eta
  953 01560 760016      uz1,	stf 6			/1 - start over, but keep animation
  954                   	random
      01561 200031
      01562 671001
      01563 063717
      01564 403717
      01565 240031
  955 01566 601570      	jmp . 2
  956                   
  957 01567 760006      uf2,	clf 6			/set up for a new leg (flag 6: keep anim. dir.)
  958 01570 023714      	and (7

      ironic computer space simulator  1.2  nl 2016-11-23                Page 20


  959 01571 244153      	dac \umo		/new motion code (0..7)
  960 01572 665001      	sal 1s			/read corresponding dx/dy form movement table
  961 01573 650040      	szs i 40		/sense switch 4 to select table (ut1 or ut0)
  962 01574 601577      	jmp . 3
  963 01575 403741      	add (ut1		/setup reference location for dy in \t1
  964 01576 601600      	jmp . 2
  965 01577 403742      	add (ut0		/select other table
  966 01600 244101      	dac \t1
  967 01601 214101      	lac i \t1		/load dy from addr. in \t1
  968 01602 244154      	dac \udy
  969 01603 444101      	idx \t1			/increment addr. in \t1
  970 01604 214101      	lac i \t1		/load dx from addr. in \t1
  971 01605 244155      	dac \udx
  972 01606 650006      	szf 6 i			/skip next on flag 6
  973 01607 621643      	jsp ucd			/set new direction for animation
  974 01610 621664      	jsp utd			/get delay
  975 01611 244156      	dac \ufc
  976 01612 204153      	lac \umo
  977 01613 640400      	sma
  978 01614 601620      	jmp . 4
  979 01615 204156      	lac \ufc		/shorter delay on stops
  980 01616 675001      	sar 1s
  981 01617 244156      	dac \ufc
  982                   
  983 01620 204107      uf1,	lac \frc		/increment center animation
  984 01621 024157      	and \uft
  985 01622 640100      	sza
  986 01623 602403      	jmp eta
  987 01624 204151      	lac \udc		/udc = 0..5
  988 01625 424152      	sub \udd
  989 01626 244151      	dac \udc
  990 01627 640400      	sma
  991 01630 601634      	jmp . 4
  992 01631 700005      	law 5
  993 01632 244151      	dac \udc
  994 01633 602403      	jmp eta
  995 01634 503743      	sad (6
  996 01635 344151      	dzm \udc
  997 01636 602403      	jmp eta
  998                   
  999 01637 204122      ufi,	lac \ict		/update instruction count
 1000 01640 400036      	add isc
 1001 01641 244122      	dac \ict
 1002                   
 1003 01642 601642      ufx, jmp .
 1004                   
 1005                   
 1006 01643 261663      ucd,	dap ucx			/subroutine to set center animation
 1007 01644 220031      	lio ran
 1008 01645 662001      	ril 1s
 1009 01646 700001      	law 1
 1010 01647 642000      	spi
 1011 01650 761000      	cma
 1012 01651 244152      	dac \udd
 1013 01652 200031      	lac ran			/animation speed, favor faster
 1014 01653 671777      	rar 9s
 1015 01654 023744      	and (3

      ironic computer space simulator  1.2  nl 2016-11-23                Page 21


 1016 01655 640100      	sza
 1017 01656 601661      	jmp . 3
 1018 01657 700001      	law 1
 1019 01660 601662      	jmp . 2
 1020 01661 700003      	law 3
 1021 01662 244157      	dac \uft
 1022 01663 601663      ucx,	jmp .
 1023                   
 1024 01664 261675      utd,	dap utx			/subroutine to get random delay (leg length)
 1025                   	random
      01665 200031
      01666 671001
      01667 063717
      01670 403717
      01671 240031
 1026 01672 675777      	sar 9s
 1027 01673 675007      	sar 3s
 1028 01674 423745      	sub (270
 1029 01675 601675      utx,	jmp .
 1030                   
 1031 01676 261726      urs,	dap urx			/subroutine to respawn the saucers
 1032 01677 200031      	lac ran			/pos x, get random number
 1033 01700 675001      	sar 1s			/scale it to less than half a screen size
 1034 01701 244150      	dac \upx
 1035 01702 675007      	sar 3s
 1036 01703 424150      	sub \upx
 1037 01704 404142      	add \rpx		/add player's x position + half screen size
 1038 01705 403734      	add (400000	
 1039 01706 244150      	dac \upx		/x now nearly random, but not too close to the player
 1040                   	random			/random pos y
      01707 200031
      01710 671001
      01711 063717
      01712 403717
      01713 240031
 1041 01714 244147      	dac \upy
 1042 01715 621643      	jsp ucd			/set up center animation
 1043 01716 244152      	dac \udd
 1044 01717 710040      	law i 40		/set up delay before next leg
 1045 01720 244156      	dac \ufc
 1046 01721 710001      	law i 1			/stopped (end of 3-steps stop)
 1047 01722 244153      	dac \umo
 1048 01723 622643      	jsp etr			/reset torpedo, get cooling
 1049 01724 700001      	law 1			/set state to active
 1050 01725 244160      	dac \ufs
 1051 01726 601726      urx,	jmp .
 1052                   
 1053                   
 1054                   /saucer explosion
 1055                   
 1056                   /setup (compare saucer display at sd)
 1057                   
 1058 02013             upt,	. 64/			/table for particle coordinates (y, x)
 1059 02077             upd,	. 64/			/table for particle deltas (dy, dx)
 1060                   
 1061 02077 000500      uxo,	 500	  200		/particle start offset coors (scaled saucer outline)
      02100 000200

      ironic computer space simulator  1.2  nl 2016-11-23                Page 22


 1062 02101 000340      	 340	  340
      02102 000340
 1063 02103 000340      	 340	  740
      02104 000740
 1064 02105 777277      	-500	  200
      02106 000200
 1065 02107 777437      	-340	  340
      02110 000340
 1066 02111 777437      	-340	  740
      02112 000740
 1067 02113 777277      	-500	 -200
      02114 777577
 1068 02115 777437      	-340	 -340
      02116 777437
 1069 02117 777437      	-340	 -740
      02120 777037
 1070 02121 000500      	 500	 -200
      02122 777577
 1071 02123 000340      	 340	 -340
      02124 777437
 1072 02125 000340      	 340	 -740
      02126 777037
 1073 02127 000000      	   0	 1240
      02130 001240
 1074 02131 000000      	   0	-1240
      02132 776537
 1075 02133 000000      	   0	  740
      02134 000740
 1076 02135 000000      	   0	  640
      02136 000640
 1077 02137 000000      	   0	  540
      02140 000540
 1078 02141 000000      	   0	  440
      02142 000440
 1079 02143 000000      	   0	  200
      02144 000200
 1080 02145 000000      	   0	  100
      02146 000100
 1081 02147 000000      	   0	 -100
      02150 777677
 1082 02151 000000      	   0	 -200
      02152 777577
 1083 02153 000000      	   0	 -440
      02154 777337
 1084 02155 000000      	   0	 -540
      02156 777237
 1085 02157 000000      	   0	 -640
      02160 777137
 1086 02161 000000      	   0	 -740
      02162 777037
 1087                   
 1088 02163 262327      uxs,	dap usx
 1089 02164 701727      	law upt			/address of coors table
 1090 02165 244177      	dac \upc
 1091 02166 702077      	law uxo			/address of outline table
 1092 02167 244200      	dac \uxc
 1093 02170 204147      usp,	lac \upy		/set up pairs of coors

      ironic computer space simulator  1.2  nl 2016-11-23                Page 23


 1094 02171 414200      	add i \uxc
 1095 02172 254177      	dac i \upc
 1096 02173 444200      	idx \uxc
 1097 02174 444177      	idx \upc
 1098 02175 204150      	lac \upx
 1099 02176 414200      	add i \uxc
 1100 02177 254177      	dac i \upc
 1101 02200 444200      	idx \uxc
 1102 02201 444177      	idx \upc
 1103 02202 523746      	sas (upd
 1104 02203 602170      	jmp usp
 1105                   
 1106 02204 760005      	clf 5			/set up 4 x 3 pairs of directional deltas
 1107 02205 760006      	clf 6			/ for the hull
 1108 02206 702013      	law upd			/address of deltas table
 1109 02207 244177      	dac \upc
 1110 02210 710004      	law i 4
 1111 02211 244201      	dac \sdc
 1112 02212 710003      usi,	law i 3
 1113 02213 244200      	dac \uxc
 1114                   usj,	random			/new random number
      02214 200031
      02215 671001
      02216 063717
      02217 403717
      02220 240031
 1115 02221 764000      	cli
 1116 02222 673777      	rcr 9s			/split it
 1117 02223 665003      	sal 2s
 1118 02224 640006      	szf 6
 1119 02225 761000      	cma
 1120 02226 254177      	dac i \upc
 1121 02227 444177      	idx \upc
 1122 02230 760200      	cla
 1123 02231 663077      	rcl 6s
 1124 02232 640005      	szf 5
 1125 02233 761000      	cma
 1126 02234 254177      	dac i \upc
 1127 02235 444177      	idx \upc
 1128 02236 464200      	isp \uxc
 1129 02237 602214      	jmp usj
 1130                   	
 1131 02240 702244      	law us0			/dispatch on \sdc (-4..-1) for passes (set flags)
 1132 02241 424201      	sub \sdc
 1133 02242 262244      	dap us0
 1134 02243 444201      	idx \sdc		/increment counter and jump
 1135 02244 602244      us0,	jmp .
 1136 02245 602256      	jmp us1
 1137 02246 602254      	jmp us2
 1138 02247 602252      	jmp us3
 1139 02250 760016      	stf 6			/2nd pass
 1140 02251 602212      	jmp usi
 1141 02252 760015      us3,	stf 5			/3rd pass
 1142 02253 602212      	jmp usi
 1143 02254 760006      us2,	clf 6			/4th pass
 1144 02255 602212      	jmp usi
 1145                   

      ironic computer space simulator  1.2  nl 2016-11-23                Page 24


 1146 02256 354177      us1,	dzm i \upc		/done, set up rim sides
 1147 02257 444177      	idx \upc
 1148                   	random
      02260 200031
      02261 671001
      02262 063717
      02263 403717
      02264 240031
 1149 02265 764000      	cli
 1150 02266 673777      	rcr 9s
 1151 02267 403747      	add (1000
 1152 02270 254177      	dac i \upc
 1153 02271 444177      	idx \upc
 1154 02272 354177      	dzm i \upc
 1155 02273 444177      	idx \upc
 1156 02274 760200      	cla
 1157 02275 663777      	rcl 9s
 1158 02276 403747      	add (1000
 1159 02277 761000      	cma
 1160 02300 254177      	dac i \upc
 1161 02301 444177      	idx \upc
 1162                   
 1163                   usk,	random			/set up remaining deltas (center rim)
      02302 200031
      02303 671001
      02304 063717
      02305 403717
      02306 240031
 1164 02307 764000      	cli
 1165 02310 677777      	scr 9s
 1166 02311 675001      	sar 1s
 1167 02312 254177      	dac i \upc
 1168 02313 444177      	idx \upc
 1169 02314 760200      	cla
 1170 02315 663377      	rcl 8s
 1171 02316 665001      	sal 1s
 1172 02317 642000      	spi
 1173 02320 761000      	cma
 1174 02321 254177      	dac i \upc
 1175 02322 444177      	idx \upc
 1176 02323 523750      	sas (uxo
 1177 02324 602302      	jmp usk
 1178                   	
 1179 02325 710027      	law i 27		/duration of explosion 
 1180 02326 244160      	dac \ufs
 1181                   
 1182 02327 602327      usx,	jmp .			/return
 1183                   
 1184                   /saucer explosion display
 1185                   / jump here from inside ufo
 1186                   
 1187 02330 464160      uxe,	isp \ufs
 1188 02331 602334      	jmp . 3
 1189 02332 621676      	jsp urs			/last iteration, respawn saucers
 1190 02333 601642      	jmp ufx			/ and exit
 1191 02334 701727      	law upt			/move and dsisplay particles
 1192 02335 244177      	dac \upc

      ironic computer space simulator  1.2  nl 2016-11-23                Page 25


 1193 02336 702013      	law upd
 1194 02337 244200      	dac \uxc
 1195 02340 760005      uxi,	clf 5
 1196                   	random
      02341 200031
      02342 671001
      02343 063717
      02344 403717
      02345 240031
 1197 02346 023751      	and (400001
 1198 02347 640100      	sza
 1199 02350 760015      	stf 5
 1200 02351 214200      	lac i \uxc
 1201 02352 414177      	add i \upc
 1202 02353 254177      	dac i \upc
 1203                   	swap
      02354 663777
      02355 663777
 1204 02356 444200      	idx \uxc
 1205 02357 444177      	idx \upc
 1206 02360 214200      	lac i \uxc
 1207 02361 414177      	add i \upc
 1208 02362 254177      	dac i \upc
 1209 02363 640005      	szf 5
 1210 02364 720107      	dpy -i 100
 1211 02365 444200      	idx \uxc
 1212 02366 444177      	idx \upc
 1213 02367 523746      	sas (upd
 1214 02370 602340      	jmp uxi
 1215                   	
 1216 02371 204147      	lac \upy		/display other saucer
 1217 02372 403734      	add (400000
 1218 02373 244162      	dac \py
 1219 02374 204150      	lac \upx
 1220 02375 244161      	dac \px
 1221 02376 623460      	jsp sd
 1222                   	
 1223 02377 404122      	add \ict
 1224 02400 200037      	lac isx
 1225 02401 244122      	dac \ict
 1226 02402 601642      	jmp ufx
 1227                   
 1228                   
 1229                   /saucer torpedo ai (setup)
 1230                   / here from inside ufo
 1231                   
 1232 02403 204126      eta,	lac \ets		/torpedo already active?
 1233 02404 640200      	spa
 1234 02405 601637      	jmp ufi
 1235 02406 650001      	szf i 1			/rocket active?
 1236 02407 601637      	jmp ufi
 1237 02410 204160      	lac \ufs		/saucers active?
 1238 02411 650500      	spq
 1239 02412 601637      	jmp ufi
 1240 02413 464174      	isp \etc		/count up cooling
 1241 02414 601637      	jmp ufi
 1242 02415 344174      	dzm \etc

      ironic computer space simulator  1.2  nl 2016-11-23                Page 26


 1243                   
 1244 02416 204150      	lac \upx		/position of tubes
 1245 02417 403752      	add (10400
 1246 02420 244172      	dac \epx
 1247 02421 204147      	lac \upy
 1248 02422 423753      	sub (3400
 1249 02423 244173      	dac \epy
 1250                   
 1251                   	random			/get random offset for targeting
      02424 200031
      02425 671001
      02426 063717
      02427 403717
      02430 240031
 1252 02431 764000      	cli
 1253 02432 677777      	scr 9s			/split it into lower parts of ac and io
 1254 02433 676777      	sir 9s
 1255 02434 100024      	xct etn			/scale it
 1256 02435 244202      	dac \exn		/store noise x
 1257                   	swap			/same for y
      02436 663777
      02437 663777
 1258 02440 100024      	xct etn
 1259 02441 244203      	dac \eyn
 1260                   
 1261                   
 1262 02442 650050      	szs i 50		/sense switch 5 to select saucer at random
 1263 02443 602456      	jmp et1			/ original shoots always from same saucer
 1264                   	random
      02444 200031
      02445 671001
      02446 063717
      02447 403717
      02450 240031
 1265 02451 640400      	sma			/which saucer
 1266 02452 602456      	jmp et1
 1267 02453 204173      	lac \epy
 1268 02454 403734      	add (400000
 1269 02455 244173      	dac \epy
 1270                   et1,
 1271 02456 200023      	lac ete
 1272 02457 244204      	dac \eps
 1273 02460 204142      	lac \rpx		/get cumulated offsets
 1274 02461 424172      	sub \epx
 1275 02462 640200      	spa
 1276 02463 761000      	cma
 1277 02464 244101      	dac \t1
 1278 02465 204143      	lac \rpy
 1279 02466 424173      	sub \epy
 1280 02467 640200      	spa
 1281 02470 761000      	cma
 1282 02471 404101      	add \t1
 1283 02472 244101      	dac \t1
 1284 02473 420022      	sub eld			/near?
 1285 02474 640200      	spa
 1286 02475 602500      	jmp . 3			/no
 1287 02476 700021      	law elb

      ironic computer space simulator  1.2  nl 2016-11-23                Page 27


 1288 02477 602501      	jmp . 2
 1289 02500 700020      	law ela
 1290 02501 244205      	dac \t2
 1291                   	
 1292 02502 204111      	lac \rdx
 1293 02503 114205      	xct i \t2		/look-ahead
 1294 02504 404142      	add \rpx
 1295 02505 424145      	sub \rxc
 1296 02506 404202      	add \exn
 1297 02507 424172      	sub \epx
 1298 02510 244206      	dac \dx			/delta x
 1299 02511 640200      	spa
 1300 02512 761000      	cma
 1301 02513 244207      	dac \adx		/abs delta x
 1302                   
 1303 02514 204112      	lac \rdy		/same for y
 1304 02515 114205      	xct i \t2
 1305 02516 404143      	add \rpy
 1306 02517 404146      	add \ryc
 1307 02520 404203      	add \eyn
 1308 02521 424173      	sub \epy
 1309 02522 244210      	dac \dy
 1310 02523 640200      	spa
 1311 02524 761000      	cma
 1312 02525 244211      	dac \ady
 1313                   
 1314 02526 204153      	lac \umo		/check loose aiming conditions
 1315 02527 023714      	and (7
 1316 02530 650500      	spq			/moving?
 1317 02531 602552      	jmp et2			/no
 1318 02532 204101      	lac \t1
 1319 02533 420025      	sub efd
 1320 02534 640200      	spa			/big enough?
 1321 02535 602552      	jmp et2			/no
 1322                   	random			/handle probabilty
      02536 200031
      02537 671001
      02540 063717
      02541 403717
      02542 240031
 1323 02543 640200      	spa
 1324 02544 761000      	cma
 1325 02545 420026      	sub efp
 1326 02546 640400      	sma			/aim loosely?
 1327 02547 602552      	jmp et2			/no
 1328 02550 200027      	lac efe
 1329 02551 244204      	dac \eps
 1330                   
 1331 02552 204211      et2,	lac \ady
 1332 02553 424204      	sub \eps
 1333 02554 640200      	spa
 1334 02555 602601      	jmp eah
 1335 02556 204207      	lac \adx
 1336 02557 424204      	sub \eps
 1337 02560 640200      	spa
 1338 02561 602606      	jmp eav
 1339                   

      ironic computer space simulator  1.2  nl 2016-11-23                Page 28


 1340 02562 204207      	lac \adx
 1341 02563 424211      	sub \ady
 1342 02564 640200      	spa
 1343 02565 761000      	cma
 1344 02566 424204      	sub \eps
 1345 02567 640400      	sma
 1346 02570 601637      	jmp ufi
 1347                   ead,
 1348 02571 700004      	law 4
 1349 02572 224210      	lio \dy
 1350 02573 642000      	spi
 1351 02574 700005      	law 5
 1352 02575 224206      	lio \dx
 1353 02576 642000      	spi
 1354 02577 403754      	add (2
 1355 02600 602612      	jmp et3
 1356                   eah,
 1357 02601 700002      	law 2
 1358 02602 224206      	lio \dx
 1359 02603 642000      	spi
 1360 02604 700003      	law 3
 1361 02605 602612      	jmp et3
 1362                   eav,
 1363 02606 760200      	cla
 1364 02607 224210      	lio \dy
 1365 02610 642000      	spi
 1366 02611 700001      	law 1
 1367                   et3,
 1368 02612 665001      	sal 1s			/read corresponding dx/dy form movement table
 1369 02613 403755      	add (emt		/setup reference location for dy in \t1
 1370 02614 244101      	dac \t1
 1371 02615 214101      	lac i \t1		/load dy from addr. in \t1
 1372 02616 244212      	dac \edy
 1373 02617 444101      	idx \t1			/increment addr. in \t1
 1374 02620 214101      	lac i \t1		/load dx from addr. in \t1
 1375 02621 244213      	dac \edx
 1376 02622 100015      	xct etl
 1377 02623 244126      	dac \ets
 1378                   
 1379 02624 601637      eti,	jmp ufi			/return to ufo
 1380                   
 1381                   
 1382                   /saucer torpedo movement routine
 1383                   
 1384 02625 262642      etm,	dap etx
 1385 02626 464126      	isp \ets		/count up life
 1386 02627 602631      	jmp . 2
 1387 02630 602644      	jmp etr 1		/expired
 1388 02631 204173      	lac \epy
 1389 02632 404212      	add \edy
 1390 02633 244173      	dac \epy
 1391                   	swap
      02634 663777
      02635 663777
 1392 02636 204172      	lac \epx
 1393 02637 404213      	add \edx
 1394 02640 244172      	dac \epx

      ironic computer space simulator  1.2  nl 2016-11-23                Page 29


 1395 02641 720107      	dpy -i 100
 1396 02642 602642      etx,	jmp .			/return
 1397 02643 262642      etr,	dap etx			/reset
 1398 02644 344126      	dzm \ets
 1399 02645 100016      	xct etd
 1400 02646 244174      	dac \etc
 1401 02647 602642      	jmp etx
 1402                   
 1403                   
 1404                   /player rocket routine
 1405                   
 1406 02650 263163      rkt,	dap rkx
 1407 02651 204135      	lac \rks		/check for collision state
 1408 02652 650100      	sza i
 1409 02653 603163      	jmp rkx
 1410 02654 640500      	szm			/ < 0 ?
 1411 02655 602711      	jmp rka			/no
 1412 02656 464135      	isp \rks		/manage rocket hit state
 1413 02657 602664      	jmp rke
 1414 02660 444135      	idx \rks
 1415 02661 204141      	lac \th0
 1416 02662 244140      	dac \rth
 1417 02663 602712      	jmp rcw
 1418 02664 400014      rke,	add rsd
 1419 02665 640400      	sma
 1420 02666 603163      	jmp rkx
 1421                   
 1422 02667 204175      rt1,	lac \thc		/animate collision, spin clockwise progressively
 1423 02670 244214      	dac \thn
 1424 02671 220006      	lio raa			/angular acceleration
 1425 02672 666001      rt2,	sil 1s
 1426 02673 464214      	isp \thn		/shift left \thd times
 1427 02674 602672      	jmp rt2
 1428 02675 464176      	isp \thd
 1429 02676 602704      	jmp rt3
 1430 02677 710020      	law i 20		/add another shift every 20 frames
 1431 02700 244176      	dac \thd
 1432 02701 204175      	lac \thc
 1433 02702 423721      	sub (1
 1434 02703 244175      	dac \thc
 1435                   rt3,	swap
      02704 663777
      02705 663777
 1436 02706 765000      	cma cli -opr		/make it a clockwise spin, clear io
 1437 02707 404140      	add \rth		/update rotational angle
 1438 02710 602727      	jmp rkr
 1439                   
 1440 02711 760011      rka,	stf 1			/start active rocket
 1441 02712 622712      rcw,	jsp .			/read control word (ccw, cw, trust, fire)
 1442 02713 324136      	dio \cw			/merge (or) spacewar player inputs
 1443 02714 760200      	cla
 1444 02715 673017      	rcr 4s
 1445 02716 044136      	ior \cw
 1446 02717 244136      	dac \cw
 1447                   
 1448 02720 224136      	lio \cw			/parse and process rotation
 1449 02721 204140      	lac \rth		/load angle

      ironic computer space simulator  1.2  nl 2016-11-23                Page 30


 1450 02722 642000      	spi			/sign cleared in io?
 1451 02723 400006      	add raa			/no, add angular acceleration
 1452 02724 662001      	ril 1s			/next bit
 1453 02725 642000      	spi
 1454 02726 420006      	sub raa
 1455 02727 640400      rkr,	sma			/normalize 0 >= angle >= 2Pi (0311040)
 1456 02730 423674      	sub (311040
 1457 02731 640200      	spa
 1458 02732 403674      	add (311040
 1459 02733 244140      	dac \rth		/update angle
 1460                   
 1461 02734 662001      	ril 1s			/parse thrust input
 1462 02735 642000      	spi
 1463 02736 760012      	stf 2			/set flag 2 for thrust
 1464 02737 662001      	ril 1s
 1465 02740 642000      	spi			/check next bit for fire
 1466 02741 760013      	stf 3			/set flag 3 for torp
 1467                   
 1468 02742 170141      	jda sin			/get sin, store it in \sn
 1469 02743 244215      	dac \sn
 1470 02744 204140      	lac \rth
 1471 02745 170133      	jda cos			/get cos, store it in \cs
 1472 02746 244216      	dac \cs
 1473                   
 1474 02747 650002      	szf i 2			/flag 2 set? update dx / dy
 1475 02750 603016      	jmp rk0
 1476 02751 204107      	lac \frc		/load frame counter
 1477 02752 464144      	isp \rac		/sensitivity, frame skip
 1478 02753 603017      	jmp rk1
 1479 02754 100010      	xct ras			/reset counter
 1480 02755 244144      	dac \rac
 1481 02756 204215      	lac \sn			/dx
 1482 02757 761000      	cma
 1483 02760 100007      	xct rvl			/apply scaling for acceleration
 1484                   	swap			/swap result into io
      02761 663777
      02762 663777
 1485 02763 100011      	xct rad			/damping, get loop count
 1486 02764 244217      	dac \rdc
 1487                   rx0,	swap			/get intermediate value from io
      02765 663777
      02766 663777
 1488 02767 404111      	add \rdx		/average with old dx
 1489 02770 675001      	sar 1s
 1490                   	swap			/swap into io
      02771 663777
      02772 663777
 1491 02773 464217      	isp \rdc		/increment loop
 1492 02774 602765      	jmp rx0
 1493 02775 324111      	dio \rdx		/store updated dx
 1494 02776 204216      	lac \cs			/same for dy
 1495 02777 100007      	xct rvl
 1496                   	swap
      03000 663777
      03001 663777
 1497 03002 100011      	xct rad
 1498 03003 244217      	dac \rdc

      ironic computer space simulator  1.2  nl 2016-11-23                Page 31


 1499                   ry0,	swap
      03004 663777
      03005 663777
 1500 03006 404112      	add \rdy
 1501 03007 675001      	sar 1s
 1502                   	swap
      03010 663777
      03011 663777
 1503 03012 464217      	isp \rdc
 1504 03013 603004      	jmp ry0
 1505 03014 324112      	dio \rdy
 1506 03015 603017      	jmp rk1
 1507                   
 1508 03016 344144      rk0,	dzm \rac
 1509                   
 1510                   rk1,	scale \sn, 4s, \sn1	/get position of rocket tip
      03017 204215
      03020 675017
      03021 244220
 1511 03022 675003      	sar 2s			/offset x = (sin >> 4) - (sin >> 8)
 1512 03023 761000      	cma
 1513 03024 404220      	add \sn1
 1514 03025 244220      	dac \sn1
 1515                   	scale \cs, 4s, \cn1	/offset y = (cos >> 4) - (cos >> 8)
      03026 204216
      03027 675017
      03030 244221
 1516 03031 675003      	sar 2s
 1517 03032 761000      	cma
 1518 03033 404221      	add \cn1
 1519 03034 244221      	dac \cn1
 1520 03035 204142      	lac \rpx		/update pos x (add dx)
 1521 03036 404111      	add \rdx
 1522 03037 244142      	dac \rpx
 1523 03040 424220      	sub \sn1		/subtract offset for tip, store it in \px
 1524 03041 244161      	dac \px
 1525 03042 204143      	lac \rpy		/same for y
 1526 03043 404112      	add \rdy
 1527 03044 244143      	dac \rpy
 1528 03045 404221      	add \cn1
 1529 03046 244162      	dac \py
 1530                   
 1531                   	scale \sn1, 1s, \rxc	/store half-offset for hit detection
      03047 204220
      03050 675001
      03051 244145
 1532                   	scale \cn1, 1s, \ryc
      03052 204221
      03053 675001
      03054 244146
 1533                   
 1534                   	scale \sn, 6s, \sn8	/scaled sine, 8 steps
      03055 204215
      03056 675077
      03057 244222
 1535 03060 675001      	sar 1s
 1536 03061 244223      	dac \sn4		/4 steps

      ironic computer space simulator  1.2  nl 2016-11-23                Page 32


 1537 03062 675001      	sar 1s
 1538 03063 244224      	dac \sn2		/2 steps
 1539 03064 675001      	sar 1s
 1540 03065 244220      	dac \sn1		/1 step
 1541 03066 244225      	dac \sm1
 1542 03067 404224      	add \sn2
 1543 03070 244226      	dac \sn3		/3 steps
 1544 03071 244227      	dac \sm3
 1545 03072 404224      	add \sn2
 1546 03073 244230      	dac \sn5		/5 steps
 1547 03074 404220      	add \sn1
 1548 03075 244231      	dac \sn6		/6 steps
 1549 03076 244232      	dac \sm6
 1550                   
 1551                   	scale \cs, 6s, \cn8	/scaled cosine, 8 steps
      03077 204216
      03100 675077
      03101 244233
 1552 03102 675001      	sar 1s
 1553 03103 244234      	dac \cn4		/4 steps
 1554 03104 675001      	sar 1s
 1555 03105 244235      	dac \cn2		/2 steps
 1556 03106 675001      	sar 1s
 1557 03107 244221      	dac \cn1		/1 step
 1558 03110 244236      	dac \cm1
 1559 03111 404235      	add \cn2
 1560 03112 244237      	dac \cn3		/3 steps
 1561 03113 244240      	dac \cm3
 1562 03114 404235      	add \cn2
 1563 03115 244241      	dac \cn5		/5 steps
 1564 03116 404221      	add \cn1
 1565 03117 244242      	dac \cn6		/6 steps
 1566 03120 244243      	dac \cm6
 1567                   
 1568 03121 623254      	jsp rod			/display it
 1569                   
 1570 03122 650003      	szf i 3			/fire torpedo?
 1571 03123 603151      	jmp rkq			/no
 1572 03124 650001      	szf i 1			/are we active?
 1573 03125 603151      	jmp rkq			/no
 1574 03126 204125      	lac \trs
 1575 03127 640100      	sza			/torpedo already active?
 1576 03130 603151      	jmp rkq			/yes
 1577 03131 204160      	lac \ufs
 1578 03132 650500      	spq			/saucers active?
 1579 03133 603151      	jmp rkq			/no
 1580 03134 100013      	xct tlf			/set up torpedo
 1581 03135 244125      	dac \trs
 1582 03136 204142      	lac \rpx		/copy position
 1583 03137 244170      	dac \tpx
 1584 03140 204143      	lac \rpy
 1585 03141 244171      	dac \tpy
 1586 03142 204215      	lac \sn			/dx
 1587 03143 761000      	cma
 1588 03144 100012      	xct trv			/apply scaling for velocity
 1589 03145 244244      	dac \tdx
 1590 03146 204216      	lac \cs			/dy

      ironic computer space simulator  1.2  nl 2016-11-23                Page 33


 1591 03147 100012      	xct trv
 1592 03150 244245      	dac \tdy
 1593                   
 1594 03151 650002      rkq,	szf i 2			/advance random on thrust
 1595 03152 603160      	jmp rki			/ to prevent patterned behavior of saucers
 1596                   	random
      03153 200031
      03154 671001
      03155 063717
      03156 403717
      03157 240031
 1597                   
 1598 03160 204122      rki,	lac \ict		/update instruction count
 1599 03161 400035      	add irk
 1600 03162 244122      	dac \ict
 1601                   
 1602 03163 603163      rkx,	jmp .
 1603                   
 1604                   
 1605                   /torpedo (rocket)
 1606                   
 1607 03164 263167      trp,	dap trx
 1608 03165 464125      	isp \trs		/count up status counter (zero = inactive)
 1609 03166 603170      	jmp . 2
 1610 03167 603167      trx,	jmp .
 1611 03170 650001      	szf i 1
 1612 03171 603231      	jmp tr1
 1613 03172 204107      	lac \frc		/frame skip
 1614 03173 023744      	and (3
 1615 03174 640030      	szs 30			/sense switch 3 for agile torpedos (better respond)
 1616 03175 023721      	and (1
 1617 03176 640100      	sza
 1618 03177 603231      	jmp tr1
 1619 03200 204216      	lac \cs			/update with steering
 1620 03201 100012      	xct trv			/scale cos of rocket
 1621 03202 404245      	add \tdy		/average 3 times with current dy
 1622 03203 675001      	sar 1s
 1623 03204 404245      	add \tdy
 1624 03205 675001      	sar 1s
 1625 03206 244245      	dac \tdy		/store updated dy
 1626 03207 404171      	add \tpy		/update pos y
 1627 03210 244171      	dac \tpy
 1628                   	swap
      03211 663777
      03212 663777
 1629 03213 204215      	lac \sn			/same for sine, dx and pos x
 1630 03214 761000      	cma
 1631 03215 100012      	xct trv
 1632 03216 404244      	add \tdx
 1633 03217 675001      	sar 1s
 1634 03220 404244      	add \tdx
 1635 03221 675001      	sar 1s
 1636 03222 404244      	add \tdx
 1637 03223 675001      	sar 1s
 1638 03224 244244      	dac \tdx
 1639 03225 404170      	add \tpx
 1640 03226 244170      	dac \tpx

      ironic computer space simulator  1.2  nl 2016-11-23                Page 34


 1641 03227 720007      	dpy -i			/display adot and jump to return
 1642 03230 603167      	jmp trx
 1643 03231 204171      tr1,	lac \tpy		/no steering, simple update
 1644 03232 404245      	add \tdy
 1645 03233 244171      	dac \tpy
 1646                   	swap
      03234 663777
      03235 663777
 1647 03236 204170      	lac \tpx
 1648 03237 404244      	add \tdx
 1649 03240 244170      	dac \tpx
 1650 03241 720007      	dpy -i
 1651 03242 603167      	jmp trx
 1652                   
 1653                   /control word get routines
 1654                   
 1655                   /read control boxes
 1656 03243 263246      rcb,	dap rcx
 1657 03244 764000      	cli
 1658 03245 720011      	iot 11
 1659 03246 603246      rcx,	jmp .
 1660                   
 1661                   /read testword
 1662 03247 263253      rtw,	dap rtx
 1663 03250 762200      	lat
 1664                   	swap
      03251 663777
      03252 663777
 1665 03253 603253      rtx,	jmp .
 1666                   
 1667                   
 1668                   /sprite routines
 1669                   
 1670                   /rocket display
 1671                   / step rearwards -  x add \sn1, y sub \cn1
 1672                   / step outwards  -  x add \cm1, y add \sm1
 1673                   / step inwards   -  x sub \cm1, y sub \sm1
 1674                   
 1675                   define disp
 1676                   	dpy-i 100		/display a dot at brightness level +1
 1677                   	term
 1678                   
 1679 03254 263417      rod, 	dap rox
 1680 03255 760016      	stf 6			/set flag 6
 1681 03256 204161      	lac \px
 1682 03257 224162      	lio \py
 1683                   	disp
      03260 720107
 1684                   
 1685                   rop,	swap			/y +4, x +6
      03261 663777
      03262 663777
 1686 03263 424234      	sub \cn4
 1687 03264 404232      	add \sm6
 1688                   	swap
      03265 663777
      03266 663777

      ironic computer space simulator  1.2  nl 2016-11-23                Page 35


 1689 03267 404223      	add \sn4
 1690 03270 404243      	add \cm6
 1691                   	disp
      03271 720107
 1692                   
 1693                   	swap			/y +5, x +3
      03272 663777
      03273 663777
 1694 03274 424241      	sub \cn5
 1695 03275 404227      	add \sm3
 1696                   	swap
      03276 663777
      03277 663777
 1697 03300 404230      	add \sn5
 1698 03301 404240      	add \cm3
 1699                   	disp
      03302 720107
 1700                   
 1701                   	swap			/y +6, x +1
      03303 663777
      03304 663777
 1702 03305 424242      	sub \cn6
 1703 03306 404225      	add \sm1
 1704                   	swap
      03307 663777
      03310 663777
 1705 03311 404231      	add \sn6
 1706 03312 404236      	add \cm1
 1707                   	disp
      03313 720107
 1708                   
 1709                   	swap			/y +6, x -1
      03314 663777
      03315 663777
 1710 03316 424242      	sub \cn6
 1711 03317 424225      	sub \sm1
 1712                   	swap
      03320 663777
      03321 663777
 1713 03322 404231      	add \sn6
 1714 03323 424236      	sub \cm1
 1715                   	disp
      03324 720107
 1716                   
 1717                   	swap			/y +8, x +6
      03325 663777
      03326 663777
 1718 03327 424233      	sub \cn8
 1719 03330 404232      	add \sm6
 1720                   	swap
      03331 663777
      03332 663777
 1721 03333 404222      	add \sn8
 1722 03334 404243      	add \cm6
 1723                   	disp
      03335 720107
 1724                   

      ironic computer space simulator  1.2  nl 2016-11-23                Page 36


 1725                   	swap			/y 3, x -10
      03336 663777
      03337 663777
 1726 03340 424237      	sub \cn3
 1727 03341 424227      	sub \sm3
 1728 03342 424232      	sub \sm6
 1729 03343 424225      	sub \sm1
 1730                   	swap
      03344 663777
      03345 663777
 1731 03346 404226      	add \sn3
 1732 03347 424240      	sub \cm3
 1733 03350 424243      	sub \cm6
 1734 03351 424236      	sub \cm1
 1735                   	disp
      03352 720107
 1736                   
 1737                   	swap			/y +7, x +6
      03353 663777
      03354 663777
 1738 03355 424233      	sub \cn8
 1739 03356 404221      	add \cn1
 1740 03357 404232      	add \sm6
 1741                   	swap
      03360 663777
      03361 663777
 1742 03362 404222      	add \sn8
 1743 03363 424220      	sub \sn1
 1744 03364 404243      	add \cm6
 1745                   	disp
      03365 720107
 1746                   
 1747 03366 650006      	szf i 6			/flag 6 set? (skip on not zero)
 1748 03367 603416      	jmp rot
 1749 03370 760006      	clf 6			/clear flag 6
 1750 03371 204236      	lac \cm1		/invert unit vector components
 1751 03372 761000      	cma
 1752 03373 244236      	dac \cm1
 1753 03374 204225      	lac \sm1
 1754 03375 761000      	cma
 1755 03376 244225      	dac \sm1
 1756 03377 204240      	lac \cm3
 1757 03400 761000      	cma
 1758 03401 244240      	dac \cm3
 1759 03402 204227      	lac \sm3
 1760 03403 761000      	cma
 1761 03404 244227      	dac \sm3
 1762 03405 204243      	lac \cm6
 1763 03406 761000      	cma
 1764 03407 244243      	dac \cm6
 1765 03410 204232      	lac \sm6
 1766 03411 761000      	cma
 1767 03412 244232      	dac \sm6
 1768 03413 204161      	lac \px			/load first pos
 1769 03414 224162      	lio \py
 1770 03415 603261      	jmp rop			/second pass for other side
 1771                   

      ironic computer space simulator  1.2  nl 2016-11-23                Page 37


 1772 03416 650002      rot,	szf i 2			/no, flag 2 set?
 1773 03417 603417      rox,	jmp .			/no, return
 1774                   	swap			/draw exhaust flame
      03420 663777
      03421 663777
 1775 03422 424232      	sub \sm6		/x -11
 1776 03423 424232      	sub \sm6
 1777 03424 404225      	add \sm1
 1778                   	swap
      03425 663777
      03426 663777
 1779 03427 424243      	sub \cm6
 1780 03430 424243      	sub \cm6
 1781 03431 404236      	add \cm1
 1782 03432 244161      	dac \px			/store position
 1783 03433 324162      	dio \py
 1784 03434 204107      	lac \frc		/load frame counter
 1785 03435 023756      	and (4
 1786 03436 640100      	sza			/is it zero? (state switch)
 1787 03437 603450      	jmp ro2
 1788 03440 204162      ro1,	lac \py			/state 1, display at y-1
 1789 03441 404221      	add \cn1
 1790                   	swap
      03442 663777
      03443 663777
 1791 03444 204161      	lac \px
 1792 03445 424220      	sub \sn1
 1793                   	disp
      03446 720107
 1794 03447 603417      	jmp rox
 1795 03450 204162      ro2,	lac \py			/state 2, display at y+5
 1796 03451 424241      	sub \cn5
 1797                   	swap
      03452 663777
      03453 663777
 1798 03454 204161      	lac \px
 1799 03455 404230      	add \sn5
 1800                   	disp
      03456 720107
 1801 03457 603417      	jmp rox			/jump to return
 1802                   
 1803                   
 1804                   /saucer display
 1805                   
 1806                   define sdisp B			/display a dot (opt. brightness parameter)
 1807                   	dpy -4000 B		/ request completion pulse
 1808                   	term
 1809                   
 1810 03460 263672      sd,	dap sdx
 1811 03461 760005      	clf 5
 1812 03462 760006      	clf 6
 1813 03463 710004      	law i 4
 1814 03464 244201      	dac \sdc
 1815                   
 1816 03465 705000      sdl,	law 5000		/y +/- 10, x +/- 4
 1817 03466 640006      	szf 6
 1818 03467 761000      	cma

      ironic computer space simulator  1.2  nl 2016-11-23                Page 38


 1819 03470 404162      	add \py
 1820                   	swap
      03471 663777
      03472 663777
 1821 03473 702000      	law 2000
 1822 03474 640005      	szf 5
 1823 03475 761000      	cma
 1824 03476 404161      	add \px
 1825                   	disp
      03477 720107
 1826                   
 1827 03500 703400      	law 3400		/y +/- 7, x +/- 7
 1828 03501 640006      	szf 6
 1829 03502 761000      	cma
 1830 03503 404162      	add \py
 1831                   	swap
      03504 663777
      03505 663777
 1832 03506 703400      	law 3400
 1833 03507 640005      	szf 5
 1834 03510 761000      	cma
 1835 03511 404161      	add \px
 1836                   	disp
      03512 720107
 1837                   
 1838 03513 703400      	law 3400		/y +/- 7, x x+/- 15
 1839 03514 640006      	szf 6
 1840 03515 761000      	cma
 1841 03516 404162      	add \py
 1842                   	swap
      03517 663777
      03520 663777
 1843 03521 707400      	law 7400
 1844 03522 640005      	szf 5
 1845 03523 761000      	cma
 1846 03524 404161      	add \px
 1847                   	disp
      03525 720107
 1848                   
 1849 03526 703532      	law sdd			/dispatch on \sdc (-4..-1) for passes (set flags)
 1850 03527 424201      	sub \sdc
 1851 03530 263532      	dap sdd
 1852 03531 444201      	idx \sdc		/increment counter and jump
 1853 03532 603532      sdd,	jmp .
 1854 03533 603544      	jmp sd1
 1855 03534 603542      	jmp sd2
 1856 03535 603540      	jmp sd3
 1857 03536 760016      	stf 6			/2nd pass
 1858 03537 603465      	jmp sdl
 1859 03540 760015      sd3,	stf 5			/3rd pass
 1860 03541 603465      	jmp sdl
 1861 03542 760006      sd2,	clf 6			/4th pass
 1862 03543 603465      	jmp sdl
 1863 03544 224162      sd1,	lio \py			/done, display outer dots
 1864 03545 203757      	lac (12400		/y 0, x + 21 (right side)
 1865 03546 404161      	add \px
 1866                   	sdisp 100

      ironic computer space simulator  1.2  nl 2016-11-23                Page 39


      03547 724107
 1867 03550 203760      	lac (-12400		/y 0, x - 21 (left side)
 1868 03551 404161      	add \px
 1869 03552 730000      	ioh
 1870                   	sdisp 100
      03553 724107
 1871                   
 1872 03554 403747      	add (1000
 1873                   	swap
      03555 663777
      03556 663777
 1874                   
 1875 03557 204151      	lac \udc		/draw first group of dots at the left
 1876 03560 665001      	sal 1s			/ dispatch on \udc x 3 (udc = 0..5) for clipping
 1877 03561 404151      	add \udc
 1878 03562 403761      	add (sd4 1
 1879 03563 263567      	dap \sd4
 1880                   	swap
      03564 663777
      03565 663777
 1881 03566 224162      	lio \py
 1882 03567 603567      sd4, 	jmp .
 1883 03570 403747      	add (1000		/0
 1884 03571 760000      	nop
 1885 03572 760000      	nop
 1886 03573 403747      	add (1000		/1
 1887 03574 730000      	ioh
 1888                   	sdisp
      03575 724007
 1889 03576 403747      	add (1000		/2
 1890 03577 730000      	ioh
 1891                   	sdisp
      03600 724007
 1892 03601 403747      	add (1000		/3
 1893 03602 730000      	ioh
 1894                   	sdisp
      03603 724007
 1895 03604 403747      	add (1000		/4
 1896 03605 730000      	ioh
 1897                   	sdisp
      03606 724007
 1898                   
 1899 03607 403762      	add (3000		/5, display 4 dots
 1900 03610 730000      	ioh
 1901                   	sdisp
      03611 724007
 1902 03612 403747      	add (1000
 1903 03613 730000      	ioh
 1904                   	sdisp
      03614 724007
 1905 03615 403747      	add (1000
 1906 03616 730000      	ioh
 1907                   	sdisp
      03617 724007
 1908 03620 403747      	add (1000
 1909 03621 730000      	ioh
 1910                   	sdisp

      ironic computer space simulator  1.2  nl 2016-11-23                Page 40


      03622 724007
 1911                   
 1912 03623 403762      	add (3000		/display 4 dots
 1913                   	sdisp
      03624 724007
 1914 03625 403747      	add (1000
 1915 03626 730000      	ioh
 1916                   	sdisp
      03627 724007
 1917 03630 403747      	add (1000
 1918 03631 730000      	ioh
 1919                   	sdisp
      03632 724007
 1920 03633 403747      	add (1000
 1921 03634 730000      	ioh
 1922                   	sdisp
      03635 724007
 1923                   
 1924                   
 1925 03636 403762      	add (3000		/draw group of remaining dots at the right
 1926                   	swap
      03637 663777
      03640 663777
 1927 03641 204151      	lac \udc		/dispatch on \udc x 3 (udc = 0..5) for clipping
 1928 03642 403763      	add (sd5 1
 1929 03643 263647      	dap sd5
 1930                   	swap
      03644 663777
      03645 663777
 1931 03646 224162      	lio \py
 1932 03647 603647      sd5,	jmp .
 1933 03650 603671      	jmp sd0
 1934 03651 603671      	jmp sd0
 1935 03652 603667      	jmp sd9
 1936 03653 603664      	jmp sd8
 1937 03654 603661      	jmp sd7
 1938 03655 603656      	jmp sd6
 1939 03656 730000      sd6,	ioh			/4 dots
 1940                   	sdisp
      03657 724007
 1941 03660 403747      	add (1000
 1942 03661 730000      sd7,	ioh			/3 dots
 1943                   	sdisp
      03662 724007
 1944 03663 403747      	add (1000
 1945 03664 730000      sd8,	ioh			/2 dots
 1946                   	sdisp
      03665 724007
 1947 03666 403747      	add (1000
 1948 03667 730000      sd9,	ioh			/last dot
 1949                   	sdisp
      03670 724007
 1950 03671 730000      sd0,	ioh			/fetch and clear last completion pulse
 1951                   
 1952 03672 603672      sdx,	jmp .			/return
 1953                   
 1954                   

      ironic computer space simulator  1.2  nl 2016-11-23                Page 41


 1955 03673 062210      	constants
      03674 311040
      03675 242763
      03676 756103
      03677 121312
      03700 532511
      03701 144417
      03702 377777
      03703 000021
      03704 000215
      03705 220455
      03706 200454
      03707 400121
      03710 420121
      03711 730000
      03712 724107
      03713 000005
      03714 000007
      03715 673777
      03716 600464
      03717 355671
      03720 240564
      03721 000001
      03722 000177
      03723 200564
      03724 400777
      03725 000012
      03726 000017
      03727 670000
      03730 577777
      03731 140000
      03732 021000
      03733 014000
      03734 400000
      03735 012200
      03736 005000
      03737 011000
      03740 001546
      03741 000061
      03742 000041
      03743 000006
      03744 000003
      03745 000270
      03746 002013
      03747 001000
      03750 002077
      03751 400001
      03752 010400
      03753 003400
      03754 000002
      03755 000101
      03756 000004
      03757 012400
      03760 765377
      03761 003570
      03762 003000
      03763 003650

      ironic computer space simulator  1.2  nl 2016-11-23                Page 42


 1956 04101             	variables
      04246
 1957                   
 1958                   ctb,				/start address for code of outline compiler
 1959                   
 1960       000004      	start 4

      No errors detected
